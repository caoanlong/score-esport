<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dragon.scoreapi.repository.SysUserRepository">
    <resultMap id="BaseMap" type="SysUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <collection property="roles" ofType="SysRole">
            <id column="role_id" jdbcType="INTEGER" property="id"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        </collection>
    </resultMap>
    <select id="findAll" resultMap="BaseMap">
        select
        id,
        username,
        phone,
        email,
        avatar,
        create_time,
        update_time
        from sys_user
    </select>
    <select id="findByUsername" resultMap="BaseMap">
        select * from sys_user where username = #{username}
    </select>
    <select id="findList" resultMap="BaseMap">
        select
        su.id,
        su.username,
        su.phone,
        su.email,
        su.avatar,
        su.login_ip,
        su.login_time,
        su.create_time,
        su.update_time,
        cu.id as create_user_id,
        cu.username as create_user_name,
        uu.id as update_user_id,
        uu.username as update_user_name
        from sys_user su
        left join sys_user cu on su.create_user_id = cu.id
        left join sys_user uu on su.update_user_id = uu.id
        <if test="username != null">
            where su.username like '%' #{username} '%'
        </if>
        order by su.create_time desc
        limit #{pageStart}, #{pageSize}
    </select>
    <select id="total" resultType="Long">
        select count(1) from sys_user
        <if test="username != null">
            where username like '%' #{username} '%'
        </if>
    </select>
    <select id="findById" resultMap="BaseMap">
        select
        su.id,
        su.username,
        su.phone,
        su.email,
        su.avatar,
        su.login_ip,
        su.login_time,
        sr.id as role_id,
        sr.role_name
        from sys_user su
        left join sys_user_role sur on sur.user_id = su.id
        left join sys_role sr on sur.role_id = sr.id
        where su.id = #{id}
    </select>
    <insert id="insert" parameterType="SysUser" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into sys_user (
        username,
        password,
        phone,
        email,
        avatar,
        create_user_id,
        create_time
        ) values (
        #{username},
        #{password},
        #{phone},
        #{email},
        #{avatar},
        #{createUserId},
        #{createTime}
        )
    </insert>
    <insert id="insertSysUserRole" parameterType="ArrayList">
        insert into sys_user_role (
        user_id, role_id
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId}, #{item.roleId})
        </foreach>
    </insert>
    <update id="update" parameterType="SysUser">
        update sys_user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId},
            </if>
            update_time = #{updateTime}
        </set>
        where id = #{id}
    </update>
    <delete id="delSysUserRole" parameterType="Integer">
        delete from sys_user_role where user_id = #{id}
    </delete>
    <delete id="delSysUserRoleByUserId" parameterType="Integer">
        delete from sys_user_role where user_id = #{userId}
    </delete>
</mapper>