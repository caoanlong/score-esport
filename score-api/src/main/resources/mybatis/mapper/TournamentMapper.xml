<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dragon.scoreapi.repository.TournamentRepository">
    <resultMap id="BaseMap" type="Tournament">
        <id column="tournament_id" jdbcType="VARCHAR" property="tournamentId"/>
        <result column="tournament_name" jdbcType="VARCHAR" property="tournamentName"/>
        <result column="tournament_logo" jdbcType="VARCHAR" property="tournamentLogo"/>
        <result column="tournament_name_en" jdbcType="VARCHAR" property="tournamentNameEn"/>
        <result column="tournament_short_name" jdbcType="VARCHAR" property="tournamentShortName"/>
        <result column="game_type" jdbcType="VARCHAR" property="gameType"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="start_time" jdbcType="VARCHAR" property="startTime"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <collection property="teams" ofType="Team">
            <id column="team_id" jdbcType="VARCHAR" property="id"/>
            <result column="team_name" jdbcType="VARCHAR" property="fullName"/>
            <result column="team_logo" jdbcType="VARCHAR" property="logo"/>
        </collection>
        <collection property="matches" ofType="Match">
            <id column="match_id" jdbcType="VARCHAR" property="matchId"/>
            <result column="match_time" jdbcType="VARCHAR" property="matchTime"/>
            <result column="match_title" jdbcType="VARCHAR" property="matchTitle"/>
            <result column="match_status" jdbcType="INTEGER" property="status"/>
            <result column="home_id" jdbcType="VARCHAR" property="homeId"/>
            <result column="away_id" jdbcType="VARCHAR" property="awayId"/>
            <association property="home" column="home_id" select="findTeamByTeamId"/>
            <association property="away" column="away_id" select="findTeamByTeamId"/>
        </collection>
    </resultMap>
    <resultMap id="TeamResultMap" type="Team">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="full_name" jdbcType="VARCHAR" property="fullName"/>
        <result column="short_name" jdbcType="VARCHAR" property="shortName"/>
        <result column="logo" jdbcType="VARCHAR" property="logo"/>
        <result column="logo2" jdbcType="VARCHAR" property="logo2"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
    </resultMap>
    <select id="findAll" resultMap="BaseMap">
        select tournament_id, game_type from `tournament`
    </select>
    <select id="findList" resultMap="BaseMap">
        select * from `tournament`
        where game_type = #{gameType} and status = #{status}
    </select>
    <select id="findById" resultMap="BaseMap">
        select
            tou.*,
            t.id as team_id,
            t.full_name as team_name,
            t.logo as team_logo,
            m.match_id as match_id,
            m.match_time as match_time,
            m.status as match_status,
            m.match_title as match_title,
            m.home_id as home_id,
            m.away_id as away_id
        from `tournament` tou
        left join `team_tournament` tt on tt.tournament_id = tou.tournament_id
        left join `team` t on t.id = tt.team_id
        left join `match` m on m.tournament_id = tou.tournament_id
        where tou.tournament_id = #{tournamentId}
    </select>
    <select id="findTeamByTeamId" resultMap="TeamResultMap">
        select
            id, full_name, short_name, logo, logo2, score
        from `team` where id = #{teamId}
    </select>
    <select id="isExist" resultType="Integer">
        select 1 from `tournament` where tournament_id = #{tournamentId} limit 1
    </select>
    <insert id="insert" parameterType="Tournament" keyColumn="tournament_id" keyProperty="tournamentId">
        insert into `tournament` (
            tournament_id,
            tournament_name,
            tournament_logo,
            tournament_name_en,
            tournament_short_name,
            game_type,
            status,
            start_time,
            end_time
        ) values (
            #{tournamentId},
            #{tournamentName},
            #{tournamentLogo},
            #{tournamentNameEn},
            #{tournamentShortName},
            #{gameType},
            #{status},
            #{startTime},
            #{endTime}
        )
    </insert>
    <update id="update" parameterType="Tournament">
        update `tournament`
        <set>
            <if test="tournamentName != null">
                tournament_name = #{tournamentName},
            </if>
            <if test="tournamentLogo != null">
                tournament_logo = #{tournamentLogo},
            </if>
            <if test="tournamentNameEn != null">
                tournament_name_en = #{tournamentNameEn},
            </if>
            <if test="status != null">
                tournament_short_name = #{tournamentShortName},
            </if>
            <if test="gameType != null">
                game_type = #{gameType},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
        </set>
        where tournament_id = #{tournamentId}
    </update>
    <select id="isTeamTournamentExist" parameterType="TeamTournament" resultType="Integer">
        select 1 from `team_tournament` where team_id = #{teamId} and tournament_id = #{tournamentId} limit 1
    </select>
    <insert id="insertTeamTournament" parameterType="TeamTournament">
        insert into team_tournament (team_id, tournament_id) values (#{teamId}, #{tournamentId})
    </insert>
    <insert id="insertBatchTeamTournament" parameterType="ArrayList">
        insert into team_tournament (
          team_id, tournament_id
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.teamId}, #{item.tournamentId})
        </foreach>
    </insert>
</mapper>